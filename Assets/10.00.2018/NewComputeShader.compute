// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain


struct VecMatPair
{
    float3 pos;
    float4x4 mat;
};

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWStructuredBuffer<VecMatPair> dataBuffer;

[numthreads(16,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!
	//Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);

    dataBuffer[id.x].pos = mul(dataBuffer[id.x].mat, float4(1.0, 2.0, 4.0, 1.0)) + float4(1.0, 2.0, 3.0, 2.0);
}
